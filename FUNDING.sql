-- 구입목록 구입
-- 후원하기 누르면 INSERT되고 취소 누르면 STATUS를 N으로 확인 누르면 PROJECT금액 +
DROP TABLE FUNDING;

CREATE TABLE FUNDING(
    FUNDING_NO NUMBER PRIMARY KEY,
    FUNDING_PRICE NUMBER,
    FUNDING_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(FUNDING_STATUS IN('Y', 'N')),
    FUNDING_USER NUMBER NOT NULL,
    FUNDING_PROJECT NUMBER NOT NULL,
    CONSTRAINT FK_FUNDING_USER FOREIGN KEY(FUNDING_USER) REFERENCES MEMBER(USER_NO) ON DELETE SET NULL,
    CONSTRAINT FK_FUNDING_PROJECT FOREIGN KEY(FUNDING_PROJECT) REFERENCES CARRYFUNDING_PROJECT(PROJECT_NO) ON DELETE SET NULL
);

DROP SEQUENCE SEQ_FUNDING_NO;
CREATE SEQUENCE SEQ_FUNDING_NO;

COMMENT ON COLUMN FUNDING."FUNDING_NO" IS '후원번호';
COMMENT ON COLUMN FUNDING."FUNDING_PRICE" IS '후원가격';
COMMENT ON COLUMN FUNDING."FUNDING_STATUS" IS '후원상태';
COMMENT ON COLUMN FUNDING."FUNDING_USER" IS '후원회원번호';
COMMENT ON COLUMN FUNDING."FUNDING_PROJECT" IS '후원프로젝트번호';

INSERT INTO FUNDING VALUES(
    SEQ_FUNDING_NO.NEXTVAL, 10000, DEFAULT, 1, 28
);

COMMIT;

-- 후원정보 입력하기
-- INSERT INTO FUNDING VALUES(SEQ_UNO.NEXTVAL,?,DEFAULT,?,?)

-- 후원정보 업데이트 하기
UPDATE MEMBER SET USER_COIN=(USER_COIN-1000) WHERE USER_NO=2;

-- 
UPDATE CARRYFUNDING_PROJECT SET REACH_AMOUNT=(REACH_AMOUNT+1000) WHERE PROJECT_NO=2;






